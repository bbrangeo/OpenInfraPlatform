# Utility function to find the BlueFramework 0.2.1589 libraries
# The various libraries will be found and put into
# BLUEFRAMEWORK_<NAME>_LIBRARY, with correct settings for debug and release.
# For usage, just link against BLUEFRAMEWORK_<NAME>_LIBRARY
#
# By default, the search will start in BLUEFRAMEWORK_ROOT_DIR, which
# should be an install target (i.e. BlueFramwork should have been installed into
# that directory.) Only x64 is supported (no support for x86).
#
# For including, the BLUEFRAMEWORK_INCLUDE_DIR should be used; the libraries
# are put in BLUEFRAMEWORK_LIBRARY_DIR. Library binaries (.DLL on Windows) are
# placed in BLUEFRAMEWORK_BINARY_DIR.

SET(BLUEFRAMEWORK_ROOT_DIR CACHE PATH "BlueFramework root directory")

IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
	SET(BLUEFRAMEWORK_ARCHITECTURE "x64")
ELSEIF(CMAKE_SIZEOF_VOID_P EQUAL 4)
	SET(BLUEFRAMEWORK_ARCHITECTURE "x86")
ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 8)

IF(BLUEFRAMEWORK_ARCHITECTURE STREQUAL "x86")
	message("x86 is not supproted by the BlueFramework")
ENDIF(BLUEFRAMEWORK_ARCHITECTURE STREQUAL "x86")
	
IF(BLUEFRAMEWORK_FIND_COMPONENTS)
  FOREACH(component ${BLUEFRAMEWORK_FIND_COMPONENTS})
    STRING(TOUPPER ${component} _COMPONENT)
    SET(BLUEFRAMEWORK_USE_${_COMPONENT} 1)
  ENDFOREACH(component)
ELSE(BLUEFRAMEWORK_FIND_COMPONENTS)
	SET(BLUEFRAMEWORK_FIND_COMPONENTS "Core")
	SET(BLUEFRAMEWORK_USE_CORE 1)
ENDIF(BLUEFRAMEWORK_FIND_COMPONENTS)

# Find path of each library
FIND_PATH(BLUEFRAMEWORK_BLUEAPPLICATION_INCLUDE_DIR
	NAMES
		BlueFramework/Application/BlueApplication.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/Application/src)
		
FIND_PATH(BLUEFRAMEWORK_BLUECOMPUTE_INCLUDE_DIR
	NAMES
		BlueFramework/Compute/BlueCompute.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/Compute/src)		
		
FIND_PATH(BLUEFRAMEWORK_BLUECORE_INCLUDE_DIR
	NAMES
		BlueFramework/Core/BlueCore.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/Core/src)		

FIND_PATH(BLUEFRAMEWORK_BLUECHEETAH_INCLUDE_DIR
	NAMES
		BlueFramework/Cheetah/BlueCheetah.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/Cheetah/src)		
		
FIND_PATH(BLUEFRAMEWORK_BLUEENGINE_INCLUDE_DIR
	NAMES
		BlueFramework/Engine/BlueEngine.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/Engine/src)		

FIND_PATH(BLUEFRAMEWORK_BLUEGRAPHICALUSERINTERFACE_INCLUDE_DIR
	NAMES
		BlueFramework/GraphicalUserInterface/BlueGraphicalUserInterface.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/GraphicalUserInterface/src)		
		
FIND_PATH(BLUEFRAMEWORK_BLUEIMAGEPROCESSING_INCLUDE_DIR
	NAMES
		BlueFramework/ImageProcessing/BlueImageProcessing.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/ImageProcessing/src)		

FIND_PATH(BLUEFRAMEWORK_BLUERADIOSITY_INCLUDE_DIR
	NAMES
		BlueFramework/Radiosity/BlueRadiosity.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/Radiosity/src)			
		
FIND_PATH(BLUEFRAMEWORK_BLUERASTERIZER_INCLUDE_DIR
	NAMES
		BlueFramework/Rasterizer/BlueRasterizer.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/Rasterizer/src)
		
FIND_PATH(BLUEFRAMEWORK_BLUERADIOSITY_INCLUDE_DIR
	NAMES
		BlueFramework/Radiosity/BlueRadiosity.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/Radiosity/src)			
		
FIND_PATH(BLUEFRAMEWORK_BLUERTRT_INCLUDE_DIR
	NAMES
		BlueFramework/RTRT/BlueRTRT.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/RTRT/src)			

FIND_PATH(BLUEFRAMEWORK_BUW_INCLUDE_DIR
	NAMES
		buw.h
	HINTS
		${BLUEFRAMEWORK_ROOT_DIR}/include)
				
SET(BLUEFRAMEWORK_INCLUDE_DIR 
	${BLUEFRAMEWORK_BLUEAPPLICATION_INCLUDE_DIR}
	${BLUEFRAMEWORK_BLUECOMPUTE_INCLUDE_DIR}
	${BLUEFRAMEWORK_BLUECORE_INCLUDE_DIR} 
	${BLUEFRAMEWORK_BLUECHEETAH_INCLUDE_DIR} 
	${BLUEFRAMEWORK_BLUEENGINE_INCLUDE_DIR}
	${BLUEFRAMEWORK_BLUEGRAPHICALUSERISENGINE_INCLUDE_DIR}
	${BLUEFRAMEWORK_BLUEIMAGEPROCESSING_INCLUDE_DIR}
	${BLUEFRAMEWORK_BLUERADIOSITY_INCLUDE_DIR}
	${BLUEFRAMEWORK_BLUERASTERIZER_INCLUDE_DIR}
	${BLUEFRAMEWORK_BLUERTRT_INCLUDE_DIR}
	${BLUEFRAMEWORK_BUW_INCLUDE_DIR}
)
		
IF(WIN32)
	SET(BLUEFRAMEWORK_WINDOWS_SUPPORT ON)
ELSEIF(UNIX)
	SET(BLUEFRAMEWORK_LINUX_SUPPORT ON)
ENDIF(WIN32)

# On Linux, .so files are all we need for linking
IF(WIN32)
	if (MSVC12)
		SET(BLUEFRAMEWORK_LIBRARY_DIR ${BLUEFRAMEWORK_ROOT_DIR}/lib/vs2013/${BLUEFRAMEWORK_ARCHITECTURE})
	elseif (MSVC11)
		SET(BLUEFRAMEWORK_LIBRARY_DIR ${BLUEFRAMEWORK_ROOT_DIR}/lib/vs2012/${BLUEFRAMEWORK_ARCHITECTURE})
	else (MSVC12)
		SET(BLUEFRAMEWORK_LIBRARY_DIR ${BLUEFRAMEWORK_ROOT_DIR}/lib/vs2010/${BLUEFRAMEWORK_ARCHITECTURE})
	endif (MSVC12)
ELSEIF(UNIX)
	SET(BLUEFRAMEWORK_LIBRARY_DIR ${BLUEFRAMEWORK_ROOT_DIR}/build)
ENDIF(WIN32)

IF(WIN32)
	if (MSVC12)
		SET(BLUEFRAMEWORK_BINARY_DIR ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE})
	elseif (MSVC11)
		SET(BLUEFRAMEWORK_BINARY_DIR ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE})
	else (MSVC12)
		SET(BLUEFRAMEWORK_BINARY_DIR ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2010/${BLUEFRAMEWORK_ARCHITECTURE})
	endif (MSVC12)
ELSEIF(UNIX)
	SET(BLUEFRAMEWORK_BINARY_DIR ${BLUEFRAMEWORK_ROOT_DIR}/bin/gcc/${BLUEFRAMEWORK_ARCHITECTURE})
ENDIF(WIN32)

MARK_AS_ADVANCED(BLUEFRAMEWORK_INCLUDE_DIR BLUEFRAMEWORK_LIBRARY_DIR)

FIND_LIBRARY(BLUEFRAMEWORK_BLUEAPPLICATION_LIBRARY_RELEASE				BlueFramework.Application 			PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEAPPLICATION_LIBRARY_DEBUG				BlueFramework.Applicationd			PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUECOMPUTE_LIBRARY_RELEASE					BlueFramework.Compute	 			PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUECOMPUTE_LIBRARY_DEBUG					BlueFramework.Computed				PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUECORE_LIBRARY_RELEASE						BlueFramework.Core 					PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUECORE_LIBRARY_DEBUG						BlueFramework.Cored 				PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUED3D11RENDERSYSTEM_LIBRARY_RELEASE		BlueFramework.D3D11RenderSystem 	PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUED3D11RENDERSYSTEM_LIBRARY_DEBUG			BlueFramework.D3D11RenderSystemd	PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUECHEETAH_LIBRARY_RELEASE					BlueFramework.Cheetah 				PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUECHEETAH_LIBRARY_DEBUG					BlueFramework.Cheetahd				PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEGL4XRENDERSYSTEM_LIBRARY_RELEASE			BlueFramework.GL4xRenderSystem 		PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEGL4XRENDERSYSTEM_LIBRARY_DEBUG			BlueFramework.GL4xRenderSystemd		PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEENGINE_LIBRARY_RELEASE					BlueFramework.Engine				PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEENGINE_LIBRARY_DEBUG						BlueFramework.Engined				PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEGRAPHICALUSERINTERFACE_LIBRARY_RELEASE	BlueFramework.UserInterface			PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEGRAPHICALUSERINTERFACE_LIBRARY_DEBUG		BlueFramework.UserInterfaced		PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEIMAGEPROCESSING_LIBRARY_RELEASE			BlueFramework.ImageProcessing 		PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUEIMAGEPROCESSING_LIBRARY_DEBUG			BlueFramework.ImageProcessingd		PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUERADIOSITIY_LIBRARY_RELEASE				BlueFramework.Radiosity 			PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUERADIOSITIY_LIBRARY_DEBUG					BlueFramework.Radiosityd			PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUERASTERIZER_LIBRARY_RELEASE				BlueFramework.Rasterizer 			PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUERASTERIZER_LIBRARY_DEBUG					BlueFramework.Rasterizerd			PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUERTRT_LIBRARY_RELEASE						BlueFramework.RTRT	 				PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})
FIND_LIBRARY(BLUEFRAMEWORK_BLUERTRT_LIBRARY_DEBUG						BlueFramework.RTRTd					PATHS ${BLUEFRAMEWORK_LIBRARY_DIR})

SET(BLUEFRAMEWORK_BLUEAPPLICATION_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUEAPPLICATION_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUEAPPLICATION_LIBRARY_DEBUG})
SET(BLUEFRAMEWORK_BLUECOMPUTE_LIBRARY
	optimized 	${BLUEFRAMEWORK_BLUECOMPUTE_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUECOMPUTE_LIBRARY_DEBUG})
SET(BLUEFRAMEWORK_BLUECORE_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUECORE_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUECORE_LIBRARY_DEBUG})
SET(BLUEFRAMEWORK_BLUED3D11RENDERSYSTEM_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUED3D11RENDERSYSTEM_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUED3D11RENDERSYSTEM_LIBRARY_DEBUG})
SET(BLUEFRAMEWORK_BLUECHEETAH_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUECHEETAH_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUECHEETAH_LIBRARY_DEBUG})
SET(BLUEFRAMEWORK_BLUEGL4XRENDERSYSTEM_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUEGL4XRENDERSYSTEM_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUEGL4XRENDERSYSTEM_LIBRARY_DEBUG})
SET(BLUEFRAMEWORK_BLUEIMAGEPROCESSING_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUEIMAGEPROCESSING_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUEIMAGEPROCESSING_LIBRARY_DEBUG})
SET(BLUEFRAMEWORK_BLUERASTERIZER_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUERASTERIZER_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUERASTERIZER_LIBRARY_DEBUG})
SET(BLUEFRAMEWORK_BLUEENGINE_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUEENGINE_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUEENGINE_LIBRARY_DEBUG})
	
SET(BLUEFRAMEWORK_BLUEGRAPHICALUSERINTERFACE_LIBRARY
	optimized 	${BLUEFRAMEWORK_BLUEGRAPHICALUSERINTERFACE_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUEGRAPHICALUSERINTERFACE_LIBRARY_DEBUG})
	
SET(BLUEFRAMEWORK_BLUEBLUERTRT_LIBRARY 
	optimized 	${BLUEFRAMEWORK_BLUERTRT_LIBRARY_RELEASE}
	debug		${BLUEFRAMEWORK_BLUERTRT_LIBRARY_DEBUG})

	
SET(BLUEFRAMEWORK_LIBRARIES	"BLUEFRAMEWORK_BLUEAPPLICATION_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUEAPPLICATION_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUECORE_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUECORE_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUED3D11RENDERSYSTEM_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUED3D11RENDERSYSTEM_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUECHEETAH_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUECHEETAH_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUEGL4XRENDERSYSTEM_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUEGL4XRENDERSYSTEM_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUEIMAGEPROCESSING_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUEIMAGEPROCESSING_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUERASTERIZER_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUERASTERIZER_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUEENGINE_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUEENGINE_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUEGRAPHICALUSERINTERFACE_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUEGRAPHICALUSERINTERFACE_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUERTRT_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUERTRT_LIBRARY_DEBUG"
							"BLUEFRAMEWORK_BLUECOMPUTE_LIBRARY_RELEASE"
							"BLUEFRAMEWORK_BLUECOMPUTE_LIBRARY_DEBUG")		

IF(BLUEFRAMEWORK_FIND_COMPONENTS)
  FOREACH(component ${BLUEFRAMEWORK_FIND_COMPONENTS})
	STRING(TOUPPER ${component} COMPONENT)
	SET(LIB_NAME BLUEFRAMEWORK_${COMPONENT}_LIBRARY)
	LIST(APPEND BLUEFRAMEWORK_LIBRARIES
		${BLUEFRAMEWORK_${COMPONENT}_LIBRARY_DEBUG}
		${BLUEFRAMEWORK_${COMPONENT}_LIBRARY_RELEASE})
  ENDFOREACH(component)
ENDIF(BLUEFRAMEWORK_FIND_COMPONENTS)

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(BlueFramework DEFAULT_MSG BLUEFRAMEWORK_LIBRARIES BLUEFRAMEWORK_INCLUDE_DIR)

if(MSVC12)
	FUNCTION(BLUEFRAMEWORK_COPY_BINARIES TargetDirectory)
		ADD_CUSTOM_TARGET(BlueFrameworkCopyBinaries
		COMMAND
			${CMAKE_COMMAND} -E copy_directory ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE} ${TargetDirectory}
		COMMENT "Copying BlueFramwork binaries to '${TargetDirectory}'"
		VERBATIM)
	ENDFUNCTION(BLUEFRAMEWORK_COPY_BINARIES)
	
	FUNCTION(BLUEFRAMEWORK_COPY_BINARIES2 TargetDirectory)
		ADD_CUSTOM_TARGET(BlueFrameworkCopyBinaries
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Applicationd.dll 				${TargetDirectory}/Debug/BlueFramework.Applicationd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Computed.dll 					${TargetDirectory}/Debug/BlueFramework.Computed.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Cored.dll 					${TargetDirectory}/Debug/BlueFramework.Cored.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.D3D11RenderSystemd.dll		${TargetDirectory}/Debug/BlueFramework.D3D11RenderSystemd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Cheetahd.dll					${TargetDirectory}/Debug/BlueFramework.Cheetahd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.GL4xRenderSystemd.dll			${TargetDirectory}/Debug/BlueFramework.GL4xRenderSystemd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Engined.dll					${TargetDirectory}/Debug/BlueFramework.Engined.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.UserInterfaced.dll			${TargetDirectory}/Debug/BlueFramework.UserInterfaced.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.ImageProcessingd.dll			${TargetDirectory}/Debug/BlueFramework.ImageProcessingd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Radiosityd.dll				${TargetDirectory}/Debug/BlueFramework.Radiosityd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Rasterizerd.dll				${TargetDirectory}/Debug/BlueFramework.Rasterizerd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.RTRTd.dll						${TargetDirectory}/Debug/BlueFramework.RTRTd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.UserInterfaced.dll			${TargetDirectory}/Debug/BlueFramework.UserInterfaced.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Application.dll 				${TargetDirectory}/Release/BlueFramework.Application.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Compute.dll 					${TargetDirectory}/Release/BlueFramework.Compute.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Core.dll 						${TargetDirectory}/Release/BlueFramework.Core.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.D3D11RenderSystem.dll			${TargetDirectory}/Release/BlueFramework.D3D11RenderSystem.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Cheetah.dll					${TargetDirectory}/Release/BlueFramework.Cheetah.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.GL4xRenderSystem.dll			${TargetDirectory}/Release/BlueFramework.GL4xRenderSystem.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Engine.dll					${TargetDirectory}/Release/BlueFramework.Engine.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.ImageProcessing.dll			${TargetDirectory}/Release/BlueFramework.ImageProcessing.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Radiosity.dll					${TargetDirectory}/Release/BlueFramework.Radiosity.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Rasterizer.dll				${TargetDirectory}/Release/BlueFramework.Rasterizer.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.RTRT.dll						${TargetDirectory}/Release/BlueFramework.RTRT.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2013/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.UserInterface.dll				${TargetDirectory}/Release/BlueFramework.UserInterface.dll
		COMMENT "Copying BlueFramwork binaries to '${TargetDirectory}'"
		VERBATIM)
	ENDFUNCTION(BLUEFRAMEWORK_COPY_BINARIES2)
elseif (MSVC11)
	FUNCTION(BLUEFRAMEWORK_COPY_BINARIES TargetDirectory)
		ADD_CUSTOM_TARGET(BlueFrameworkCopyBinaries
		COMMAND
			${CMAKE_COMMAND} -E copy_directory ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE} ${TargetDirectory}
		COMMENT "Copying BlueFramwork binaries to '${TargetDirectory}'"
		VERBATIM)
	ENDFUNCTION(BLUEFRAMEWORK_COPY_BINARIES)
	
	FUNCTION(BLUEFRAMEWORK_COPY_BINARIES2 TargetDirectory)
		ADD_CUSTOM_TARGET(BlueFrameworkCopyBinaries
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Applicationd.dll 				${TargetDirectory}/Debug/BlueFramework.Applicationd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Computed.dll 					${TargetDirectory}/Debug/BlueFramework.Computed.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Cored.dll 					${TargetDirectory}/Debug/BlueFramework.Cored.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.D3D11RenderSystemd.dll		${TargetDirectory}/Debug/BlueFramework.D3D11RenderSystemd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Cheetahd.dll					${TargetDirectory}/Debug/BlueFramework.Cheetahd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.GL4xRenderSystemd.dll			${TargetDirectory}/Debug/BlueFramework.GL4xRenderSystemd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Engined.dll					${TargetDirectory}/Debug/BlueFramework.Engined.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.ImageProcessingd.dll			${TargetDirectory}/Debug/BlueFramework.ImageProcessingd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Radiosityd.dll				${TargetDirectory}/Debug/BlueFramework.Radiosityd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Rasterizerd.dll				${TargetDirectory}/Debug/BlueFramework.Rasterizerd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.RTRTd.dll						${TargetDirectory}/Debug/BlueFramework.RTRTd.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.UserInterfaced.dll			${TargetDirectory}/Debug/BlueFramework.UserInterfaced.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Application.dll 				${TargetDirectory}/Release/BlueFramework.Application.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Compute.dll 					${TargetDirectory}/Release/BlueFramework.Compute.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Core.dll 						${TargetDirectory}/Release/BlueFramework.Core.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.D3D11RenderSystem.dll			${TargetDirectory}/Release/BlueFramework.D3D11RenderSystem.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Cheetah.dll					${TargetDirectory}/Release/BlueFramework.Cheetah.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.GL4xRenderSystem.dll			${TargetDirectory}/Release/BlueFramework.GL4xRenderSystem.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Engine.dll					${TargetDirectory}/Release/BlueFramework.Engine.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.ImageProcessing.dll			${TargetDirectory}/Release/BlueFramework.ImageProcessing.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Radiosity.dll					${TargetDirectory}/Release/BlueFramework.Radiosity.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.Rasterizer.dll				${TargetDirectory}/Release/BlueFramework.Rasterizer.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.RTRT.dll						${TargetDirectory}/Release/BlueFramework.RTRT.dll
			COMMAND ${CMAKE_COMMAND} -E copy ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2012/${BLUEFRAMEWORK_ARCHITECTURE}/BlueFramework.UserInterface.dll				${TargetDirectory}/Release/BlueFramework.UserInterface.dll
		COMMENT "Copying BlueFramwork binaries to '${TargetDirectory}'"
		VERBATIM)
	ENDFUNCTION(BLUEFRAMEWORK_COPY_BINARIES2)
else (MSVC12)
	FUNCTION(BLUEFRAMEWORK_COPY_BINARIES TargetDirectory)
		ADD_CUSTOM_TARGET(BUWFrameworkCopyBinaries
		COMMAND
			${CMAKE_COMMAND} -E copy_directory ${BLUEFRAMEWORK_ROOT_DIR}/bin/vs2010/${BLUEFRAMEWORK_ARCHITECTURE} ${TargetDirectory}
		COMMENT "Copying BlueFramwork binaries to '${TargetDirectory}'"
		VERBATIM)
	ENDFUNCTION(BLUEFRAMEWORK_COPY_BINARIES)
endif (MSVC12)